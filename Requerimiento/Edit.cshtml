@model Proyecto.Models.Requerimiento

@{
    ViewBag.Title = "Editar Requerimiento";

}



<body onload="Desabilitar();">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container-fluid text-center">
            <h2>@ViewBag.Title</h2>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <table class="d-flex justify-content-center">
                <tbody>



                    <tr style="line-height:50px">
                        <th>
                            Proyecto
                        </th>

                        <td required="true" readonly>
                            @Html.TextBoxFor(model => model.nombreProyecto_FK, new { @readonly = "readonly", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.nombreProyecto_FK, "", new { @class = "text-danger" })
                        </td>
                    </tr>

                    <tr style="line-height:50px">
                        <th>
                            Seleccione Modulo
                        </th>
                        <td required="true" readonly>
                            @Html.TextBoxFor(model => model.Modulo.Nombre, new { @readonly = "readonly", @class = "form-control" })
                        </td>

                    </tr>

                    <tr style="line-height:50px">
                        <th>
                            Nombre
                        </th>

                        <td required="true" readonly>
                            @Html.TextBoxFor(model => model.nombre, new { @readonly = "readonly", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                        </td>
                    </tr>


                    <tr style="line-height:50px">
                        <th>
                            Seleccione Estado
                        </th>
                        <td>

                            @if (TempData["Estado"] != null)
                            {
                                @Html.DropDownList("estado", new SelectList(TempData["Estado"] as List<string>), new { @class = "form-control" })
                            }
                        </td>
                    </tr>

                    <tr style="line-height:50px">
                        <th>
                            Seleccione Complejidad
                        </th>
                        <td>

                            @if (TempData["Complejidad"] != null)
                            {
                                @Html.DropDownList("complejidad", new SelectList(TempData["Complejidad"] as List<string>), new { @class = " form-control Desarrollador" })
                            }
                        </td>
                    </tr>
                    <tr style="line-height:50px">
                        <th>
                            Duracion Estimada
                        </th>
                        <td>
                            @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = " Desarrollador form-control" } })
                            @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = " text-danger" })
                        </td>
                    </tr>
                    <tr style="line-height:50px">
                        <th>
                            Duracion Real
                        </th>
                        <td>
                            @Html.EditorFor(model => model.duracionReal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.duracionReal, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr style="line-height:50px">
                        <th>
                            Empleado Responsable
                        </th>
                        @if (TempData["Miembros"] != null)
                        {
                            <td>
                                @Html.DropDownList("miembros", new SelectList(TempData["Miembros"] as List<string>), new { @class = "form-control" })
                            </td>
                        }
                    </tr>
                </tbody>
            </table>


        </div>

        <div class="botones text-center">
            <input type="submit" onclick="habilitar();" value="Aceptar" class="btn btn-success text-center" />
            <a href="~/Requerimiento/Index" class="btn btn-default text-center">
                Cancelar
            </a>

        </div>
    }

    <div class="botones text-right">
        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-default " })
    </div>



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script>
        function habilitar() {
            var rol = '@ViewBag.user';
            var lista = document.getElementsByClassName(rol);
            for (var i = 0; i < lista.length; ++i) {
                lista[i].disabled = false;
            }
        }
    </script>
    <script>
        function Desabilitar() {
            var rol = '@ViewBag.user';
            var lista = document.getElementsByClassName(rol);
            for (var i = 0; i < lista.length; ++i) {
                lista[i].disabled = true;
            }
        }
    </script>
</body>